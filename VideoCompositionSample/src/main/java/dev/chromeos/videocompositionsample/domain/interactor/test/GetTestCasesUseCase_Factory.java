/*
 * Copyright (c) 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Dagger (https://dagger.dev).
package dev.chromeos.videocompositionsample.domain.interactor.test;

import dagger.internal.Factory;
import dev.chromeos.videocompositionsample.domain.repository.ITestCaseRepo;
import dev.chromeos.videocompositionsample.domain.schedulers.ISchedulerProvider;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetTestCasesUseCase_Factory implements Factory<GetTestCasesUseCase> {
  private final Provider<ISchedulerProvider> schedulerProvider;

  private final Provider<ITestCaseRepo> testCaseRepoProvider;

  public GetTestCasesUseCase_Factory(Provider<ISchedulerProvider> schedulerProvider,
      Provider<ITestCaseRepo> testCaseRepoProvider) {
    this.schedulerProvider = schedulerProvider;
    this.testCaseRepoProvider = testCaseRepoProvider;
  }

  @Override
  public GetTestCasesUseCase get() {
    return newInstance(schedulerProvider.get(), testCaseRepoProvider.get());
  }

  public static GetTestCasesUseCase_Factory create(Provider<ISchedulerProvider> schedulerProvider,
      Provider<ITestCaseRepo> testCaseRepoProvider) {
    return new GetTestCasesUseCase_Factory(schedulerProvider, testCaseRepoProvider);
  }

  public static GetTestCasesUseCase newInstance(ISchedulerProvider schedulerProvider,
      ITestCaseRepo testCaseRepo) {
    return new GetTestCasesUseCase(schedulerProvider, testCaseRepo);
  }
}
